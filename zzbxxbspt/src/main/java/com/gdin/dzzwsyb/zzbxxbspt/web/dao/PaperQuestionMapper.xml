<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.gdin.dzzwsyb.zzbxxbspt.web.dao.PaperQuestionMapper">
	<resultMap id="BaseResultMap"
		type="com.gdin.dzzwsyb.zzbxxbspt.web.model.PaperQuestion">
		<id column="ID" jdbcType="VARCHAR" property="id" />
		<result column="PAPER_ID" jdbcType="VARCHAR" property="paperId" />
		<result column="QUESTION_ID" jdbcType="VARCHAR"
			property="questionId" />
		<result column="ANSWER" jdbcType="VARCHAR" property="answer" />
		<result column="QUESTION_ORDER" jdbcType="INTEGER"
			property="questionOrder" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ExtendResultMap"
		type="com.gdin.dzzwsyb.zzbxxbspt.web.model.PaperQuestionExtend">
		<result column="QUESTION_CONTENT" jdbcType="VARCHAR"
			property="questionContent" />
		<collection property="answers"
			ofType="com.gdin.dzzwsyb.zzbxxbspt.web.model.Answer"
			javaType="java.util.List" resultMap="AnswerResultMap">
		</collection>
	</resultMap>
	<resultMap id="AnswerResultMap"
		type="com.gdin.dzzwsyb.zzbxxbspt.web.model.Answer">
		<id column="ANSWER_ID" jdbcType="VARCHAR" property="answerId" />
		<result column="ANSWER_CONTENT" jdbcType="VARCHAR"
			property="answerContent" />
		<result column="ANSWER_TYPE" jdbcType="INTEGER"
			property="answerType" />
		<result column="ANSWER_ORDER" jdbcType="INTEGER"
			property="answerOrder" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		ID, PAPER_ID, QUESTION_ID, ANSWER, QUESTION_ORDER
	</sql>
	<select id="selectByExample"
		parameterType="com.gdin.dzzwsyb.zzbxxbspt.web.model.PaperQuestionExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from paper_question
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from paper_question
		where ID = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		paper_question
		where ID = #{id,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.gdin.dzzwsyb.zzbxxbspt.web.model.PaperQuestionExample">
		delete from paper_question
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="com.gdin.dzzwsyb.zzbxxbspt.web.model.PaperQuestion">
		insert into paper_question (ID, PAPER_ID, QUESTION_ID,
		ANSWER, QUESTION_ORDER)
		values (#{id,jdbcType=VARCHAR},
		#{paperId,jdbcType=VARCHAR},
		#{questionId,jdbcType=VARCHAR},
		#{answer,jdbcType=VARCHAR}, #{questionOrder,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective"
		parameterType="com.gdin.dzzwsyb.zzbxxbspt.web.model.PaperQuestion">
		insert into paper_question
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="paperId != null">
				PAPER_ID,
			</if>
			<if test="questionId != null">
				QUESTION_ID,
			</if>
			<if test="answer != null">
				ANSWER,
			</if>
			<if test="questionOrder != null">
				QUESTION_ORDER,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="paperId != null">
				#{paperId,jdbcType=VARCHAR},
			</if>
			<if test="questionId != null">
				#{questionId,jdbcType=VARCHAR},
			</if>
			<if test="answer != null">
				#{answer,jdbcType=VARCHAR},
			</if>
			<if test="questionOrder != null">
				#{questionOrder,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.gdin.dzzwsyb.zzbxxbspt.web.model.PaperQuestionExample"
		resultType="java.lang.Long">
		select count(*) from paper_question
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update paper_question
		<set>
			<if test="record.id != null">
				ID = #{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.paperId != null">
				PAPER_ID = #{record.paperId,jdbcType=VARCHAR},
			</if>
			<if test="record.questionId != null">
				QUESTION_ID = #{record.questionId,jdbcType=VARCHAR},
			</if>
			<if test="record.answer != null">
				ANSWER = #{record.answer,jdbcType=VARCHAR},
			</if>
			<if test="record.questionOrder != null">
				QUESTION_ORDER =
				#{record.questionOrder,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update paper_question
		set ID = #{record.id,jdbcType=VARCHAR},
		PAPER_ID =
		#{record.paperId,jdbcType=VARCHAR},
		QUESTION_ID =
		#{record.questionId,jdbcType=VARCHAR},
		ANSWER =
		#{record.answer,jdbcType=VARCHAR},
		QUESTION_ORDER =
		#{record.questionOrder,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.gdin.dzzwsyb.zzbxxbspt.web.model.PaperQuestion">
		update paper_question
		<set>
			<if test="paperId != null">
				PAPER_ID = #{paperId,jdbcType=VARCHAR},
			</if>
			<if test="questionId != null">
				QUESTION_ID = #{questionId,jdbcType=VARCHAR},
			</if>
			<if test="answer != null">
				ANSWER = #{answer,jdbcType=VARCHAR},
			</if>
			<if test="questionOrder != null">
				QUESTION_ORDER = #{questionOrder,jdbcType=INTEGER},
			</if>
		</set>
		where ID = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.gdin.dzzwsyb.zzbxxbspt.web.model.PaperQuestion">
		update paper_question
		set PAPER_ID =
		#{paperId,jdbcType=VARCHAR},
		QUESTION_ID =
		#{questionId,jdbcType=VARCHAR},
		ANSWER = #{answer,jdbcType=VARCHAR},
		QUESTION_ORDER = #{questionOrder,jdbcType=INTEGER}
		where ID =
		#{id,jdbcType=VARCHAR}
	</update>
	<select id="getPaperQestion" parameterType="java.lang.String" resultMap="ExtendResultMap">
		select
			paper_question.id, paper_question.paper_id, paper_question.question_id, paper_question.answer, paper_question.question_order, question.question_content, answer.answer_id, answer.answer_content, answer.answer_order
		from 
			paper_question
		left outer join
			question
		on 
			paper_question.question_id = question.question_id
		left outer join
			answer
		on
			question.question_id = answer.question_id
		where
			paper_id = #{paperId,jdbcType=VARCHAR}
		order by
			question_order, answer_order asc
	</select>
</mapper>