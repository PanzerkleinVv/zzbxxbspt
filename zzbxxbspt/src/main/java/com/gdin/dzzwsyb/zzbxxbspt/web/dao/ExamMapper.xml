<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdin.dzzwsyb.zzbxxbspt.web.dao.ExamMapper">
	<resultMap id="BaseResultMap"
		type="com.gdin.dzzwsyb.zzbxxbspt.web.model.Exam">
		<id column="EXAM_ID" jdbcType="VARCHAR" property="examId" />
		<result column="GROUP_ID" jdbcType="VARCHAR" property="groupId" />
		<result column="EXAM_TITLE" jdbcType="VARCHAR"
			property="examTitle" />
		<result column="EXAM_BEGIN" jdbcType="TIMESTAMP"
			property="examBegin" />
		<result column="EXAM_END" jdbcType="TIMESTAMP"
			property="examEnd" />
		<result column="EXAM_TIME" jdbcType="INTEGER"
			property="examTime" />
		<result column="EXAM_SCORE" jdbcType="INTEGER"
			property="examScore" />
		<result column="EXAM_SC" jdbcType="INTEGER" property="examSc" />
		<result column="EXAM_SC_SCORE" jdbcType="DECIMAL"
			property="examScScore" />
		<result column="EXAM_TF" jdbcType="INTEGER" property="examTf" />
		<result column="EXAM_TF_SCORE" jdbcType="DECIMAL"
			property="examTfScore" />
		<result column="EXAM_MC" jdbcType="INTEGER" property="examMc" />
		<result column="EXAM_MC_SCORE" jdbcType="DECIMAL"
			property="examMcScore" />
		<result column="EXAM_IC" jdbcType="INTEGER" property="examIc" />
		<result column="EXAM_IC_SCORE" jdbcType="DECIMAL"
			property="examIcScore" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ExtendResultMap"
		type="com.gdin.dzzwsyb.zzbxxbspt.web.model.ExamExtend">
		<result column="PAPER_ID" jdbcType="VARCHAR" property="paperId" />
		<result column="USER_ID" jdbcType="VARCHAR" property="userId" />
		<result column="PAPER_SCORE" jdbcType="DECIMAL"
			property="paperScore" />
		<result column="PAPER_BEGIN" jdbcType="TIMESTAMP"
			property="paperBegin" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		EXAM_ID, GROUP_ID, EXAM_TITLE, EXAM_BEGIN, EXAM_END, EXAM_TIME, EXAM_SCORE,
		EXAM_SC,
		EXAM_SC_SCORE, EXAM_TF, EXAM_TF_SCORE, EXAM_MC, EXAM_MC_SCORE, EXAM_IC,
		EXAM_IC_SCORE
	</sql>
	<sql id="Extend_Column_List">
		EXAM.EXAM_ID, EXAM_TITLE, EXAM_BEGIN, EXAM_END, EXAM_TIME, EXAM_SCORE,
		EXAM_SC, EXAM_SC_SCORE, EXAM_TF, EXAM_TF_SCORE, EXAM_MC, EXAM_MC_SCORE,
		EXAM_IC, EXAM_IC_SCORE, PAPER_ID, USER_ID, PAPER_SCORE, PAPER_BEGIN
	</sql>
	<select id="selectByExample"
		parameterType="com.gdin.dzzwsyb.zzbxxbspt.web.model.ExamExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from exam
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from exam
		where EXAM_ID = #{examId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from exam
		where EXAM_ID = #{examId,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.gdin.dzzwsyb.zzbxxbspt.web.model.ExamExample">
		delete from exam
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="com.gdin.dzzwsyb.zzbxxbspt.web.model.Exam">
		insert into exam (EXAM_ID, GROUP_ID, EXAM_TITLE,
		EXAM_BEGIN, EXAM_END, EXAM_TIME,
		EXAM_SCORE, EXAM_SC, EXAM_SC_SCORE,
		EXAM_TF, EXAM_TF_SCORE, EXAM_MC,
		EXAM_MC_SCORE, EXAM_IC, EXAM_IC_SCORE
		)
		values (#{examId,jdbcType=VARCHAR}, #{groupId,jdbcType=VARCHAR},
		#{examTitle,jdbcType=VARCHAR},
		#{examBegin,jdbcType=TIMESTAMP}, #{examEnd,jdbcType=TIMESTAMP}, #{examTime,jdbcType=INTEGER},
		#{examScore,jdbcType=INTEGER}, #{examSc,jdbcType=INTEGER},
		#{examScScore,jdbcType=DECIMAL},
		#{examTf,jdbcType=INTEGER}, #{examTfScore,jdbcType=DECIMAL}, #{examMc,jdbcType=INTEGER},
		#{examMcScore,jdbcType=DECIMAL}, #{examIc,jdbcType=INTEGER},
		#{examIcScore,jdbcType=DECIMAL}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.gdin.dzzwsyb.zzbxxbspt.web.model.Exam">
		insert into exam
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="examId != null">
				EXAM_ID,
			</if>
			<if test="groupId != null">
				GROUP_ID,
			</if>
			<if test="examTitle != null">
				EXAM_TITLE,
			</if>
			<if test="examBegin != null">
				EXAM_BEGIN,
			</if>
			<if test="examEnd != null">
				EXAM_END,
			</if>
			<if test="examTime != null">
				EXAM_TIME,
			</if>
			<if test="examScore != null">
				EXAM_SCORE,
			</if>
			<if test="examSc != null">
				EXAM_SC,
			</if>
			<if test="examScScore != null">
				EXAM_SC_SCORE,
			</if>
			<if test="examTf != null">
				EXAM_TF,
			</if>
			<if test="examTfScore != null">
				EXAM_TF_SCORE,
			</if>
			<if test="examMc != null">
				EXAM_MC,
			</if>
			<if test="examMcScore != null">
				EXAM_MC_SCORE,
			</if>
			<if test="examIc != null">
				EXAM_IC,
			</if>
			<if test="examIcScore != null">
				EXAM_IC_SCORE,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="examId != null">
				#{examId,jdbcType=VARCHAR},
			</if>
			<if test="groupId != null">
				#{groupId,jdbcType=VARCHAR},
			</if>
			<if test="examTitle != null">
				#{examTitle,jdbcType=VARCHAR},
			</if>
			<if test="examBegin != null">
				#{examBegin,jdbcType=TIMESTAMP},
			</if>
			<if test="examEnd != null">
				#{examEnd,jdbcType=TIMESTAMP},
			</if>
			<if test="examTime != null">
				#{examTime,jdbcType=INTEGER},
			</if>
			<if test="examScore != null">
				#{examScore,jdbcType=INTEGER},
			</if>
			<if test="examSc != null">
				#{examSc,jdbcType=INTEGER},
			</if>
			<if test="examScScore != null">
				#{examScScore,jdbcType=DECIMAL},
			</if>
			<if test="examTf != null">
				#{examTf,jdbcType=INTEGER},
			</if>
			<if test="examTfScore != null">
				#{examTfScore,jdbcType=DECIMAL},
			</if>
			<if test="examMc != null">
				#{examMc,jdbcType=INTEGER},
			</if>
			<if test="examMcScore != null">
				#{examMcScore,jdbcType=DECIMAL},
			</if>
			<if test="examIc != null">
				#{examIc,jdbcType=INTEGER},
			</if>
			<if test="examIcScore != null">
				#{examIcScore,jdbcType=DECIMAL},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.gdin.dzzwsyb.zzbxxbspt.web.model.ExamExample"
		resultType="java.lang.Long">
		select count(*) from exam
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update exam
		<set>
			<if test="record.examId != null">
				EXAM_ID = #{record.examId,jdbcType=VARCHAR},
			</if>
			<if test="record.groupId != null">
				GROUP_ID = #{record.groupId,jdbcType=VARCHAR},
			</if>
			<if test="record.examTitle != null">
				EXAM_TITLE = #{record.examTitle,jdbcType=VARCHAR},
			</if>
			<if test="record.examBegin != null">
				EXAM_BEGIN = #{record.examBegin,jdbcType=TIMESTAMP},
			</if>
			<if test="record.examEnd != null">
				EXAM_END = #{record.examEnd,jdbcType=TIMESTAMP},
			</if>
			<if test="record.examTime != null">
				EXAM_TIME = #{record.examTime,jdbcType=INTEGER},
			</if>
			<if test="record.examScore != null">
				EXAM_SCORE = #{record.examScore,jdbcType=INTEGER},
			</if>
			<if test="record.examSc != null">
				EXAM_SC = #{record.examSc,jdbcType=INTEGER},
			</if>
			<if test="record.examScScore != null">
				EXAM_SC_SCORE = #{record.examScScore,jdbcType=DECIMAL},
			</if>
			<if test="record.examTf != null">
				EXAM_TF = #{record.examTf,jdbcType=INTEGER},
			</if>
			<if test="record.examTfScore != null">
				EXAM_TF_SCORE = #{record.examTfScore,jdbcType=DECIMAL},
			</if>
			<if test="record.examMc != null">
				EXAM_MC = #{record.examMc,jdbcType=INTEGER},
			</if>
			<if test="record.examMcScore != null">
				EXAM_MC_SCORE = #{record.examMcScore,jdbcType=DECIMAL},
			</if>
			<if test="record.examIc != null">
				EXAM_IC = #{record.examIc,jdbcType=INTEGER},
			</if>
			<if test="record.examIcScore != null">
				EXAM_IC_SCORE = #{record.examIcScore,jdbcType=DECIMAL},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update exam
		set EXAM_ID = #{record.examId,jdbcType=VARCHAR},
		GROUP_ID = #{record.groupId,jdbcType=VARCHAR},
		EXAM_TITLE = #{record.examTitle,jdbcType=VARCHAR},
		EXAM_BEGIN = #{record.examBegin,jdbcType=TIMESTAMP},
		EXAM_END = #{record.examEnd,jdbcType=TIMESTAMP},
		EXAM_TIME = #{record.examTime,jdbcType=INTEGER},
		EXAM_SCORE = #{record.examScore,jdbcType=INTEGER},
		EXAM_SC = #{record.examSc,jdbcType=INTEGER},
		EXAM_SC_SCORE = #{record.examScScore,jdbcType=DECIMAL},
		EXAM_TF = #{record.examTf,jdbcType=INTEGER},
		EXAM_TF_SCORE = #{record.examTfScore,jdbcType=DECIMAL},
		EXAM_MC = #{record.examMc,jdbcType=INTEGER},
		EXAM_MC_SCORE = #{record.examMcScore,jdbcType=DECIMAL},
		EXAM_IC = #{record.examIc,jdbcType=INTEGER},
		EXAM_IC_SCORE = #{record.examIcScore,jdbcType=DECIMAL}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.gdin.dzzwsyb.zzbxxbspt.web.model.Exam">
		update exam
		<set>
			<if test="groupId != null">
				GROUP_ID = #{groupId,jdbcType=VARCHAR},
			</if>
			<if test="examTitle != null">
				EXAM_TITLE = #{examTitle,jdbcType=VARCHAR},
			</if>
			<if test="examBegin != null">
				EXAM_BEGIN = #{examBegin,jdbcType=TIMESTAMP},
			</if>
			<if test="examEnd != null">
				EXAM_END = #{examEnd,jdbcType=TIMESTAMP},
			</if>
			<if test="examTime != null">
				EXAM_TIME = #{examTime,jdbcType=INTEGER},
			</if>
			<if test="examScore != null">
				EXAM_SCORE = #{examScore,jdbcType=INTEGER},
			</if>
			<if test="examSc != null">
				EXAM_SC = #{examSc,jdbcType=INTEGER},
			</if>
			<if test="examScScore != null">
				EXAM_SC_SCORE = #{examScScore,jdbcType=DECIMAL},
			</if>
			<if test="examTf != null">
				EXAM_TF = #{examTf,jdbcType=INTEGER},
			</if>
			<if test="examTfScore != null">
				EXAM_TF_SCORE = #{examTfScore,jdbcType=DECIMAL},
			</if>
			<if test="examMc != null">
				EXAM_MC = #{examMc,jdbcType=INTEGER},
			</if>
			<if test="examMcScore != null">
				EXAM_MC_SCORE = #{examMcScore,jdbcType=DECIMAL},
			</if>
			<if test="examIc != null">
				EXAM_IC = #{examIc,jdbcType=INTEGER},
			</if>
			<if test="examIcScore != null">
				EXAM_IC_SCORE = #{examIcScore,jdbcType=DECIMAL},
			</if>
		</set>
		where EXAM_ID = #{examId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.gdin.dzzwsyb.zzbxxbspt.web.model.Exam">
		update exam
		set GROUP_ID = #{groupId,jdbcType=VARCHAR},
		EXAM_TITLE = #{examTitle,jdbcType=VARCHAR},
		EXAM_BEGIN = #{examBegin,jdbcType=TIMESTAMP},
		EXAM_END = #{examEnd,jdbcType=TIMESTAMP},
		EXAM_TIME = #{examTime,jdbcType=INTEGER},
		EXAM_SCORE = #{examScore,jdbcType=INTEGER},
		EXAM_SC = #{examSc,jdbcType=INTEGER},
		EXAM_SC_SCORE = #{examScScore,jdbcType=DECIMAL},
		EXAM_TF = #{examTf,jdbcType=INTEGER},
		EXAM_TF_SCORE = #{examTfScore,jdbcType=DECIMAL},
		EXAM_MC = #{examMc,jdbcType=INTEGER},
		EXAM_MC_SCORE = #{examMcScore,jdbcType=DECIMAL},
		EXAM_IC = #{examIc,jdbcType=INTEGER},
		EXAM_IC_SCORE = #{examIcScore,jdbcType=DECIMAL}
		where EXAM_ID = #{examId,jdbcType=VARCHAR}
	</update>
	<select id="selectByExampleAndPage" resultMap="BaseResultMap"
		parameterType="com.gdin.dzzwsyb.zzbxxbspt.web.model.ExamExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from exam
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="getMyExamList" resultMap="ExtendResultMap"
		parameterType="com.gdin.dzzwsyb.zzbxxbspt.web.model.User">
		select
		<include refid="Extend_Column_List" />
		from exam left outer join paper on exam.exam_id = paper.exam_id and user_id = #{userId,jdbcType=VARCHAR}
		where 
		group_id = #{userGroup,jdbcType=VARCHAR} 
		order by
		exam_begin, exam_end desc
	</select>
</mapper>